name: Docker Manual
on:
  workflow_dispatch:
    inputs:
      push-de-to-ghcr:
        type: boolean
        default: false
        required: false
      push-ce-to-ghcr:
        type: boolean
        default: true
        required: false
      push-demo-to-ecr:
        type: boolean
        default: false
        required: false
      tag:
        type: string
        required: false
      tag-sha:
        type: boolean
        required: false
        default: false

jobs:
  configure:
    name: Configure Inputs
    runs-on: ubuntu-latest
    outputs:
      docker-config: ${{ steps.docker.outputs.docker-config }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Fetch Tags
        run: git fetch origin +refs/tags/*:refs/tags/*
      - name: Calculate Version
        id: version
        run: |
          if [[ "$GITHUB_EVENT_NAME" == "pull_request" ]]; then
            id_sha="$(git merge-base origin/main HEAD)"
          else
            id_sha="${{ github.sha }}"
          fi
          tenzir_version_build_metadata="-g${id_sha:0:10}"
          echo "tenzir-version-build-metadata=${tenzir_version_build_metadata}" >> "$GITHUB_OUTPUT"
      - name: Configure Docker
        id: docker
        run: |
          echo '::notice inputs = ${{ toJSON(inputs) }}'
          tags=()
          if [[ '${{ inputs.tag }}' != "" ]]; then
            tags+=('${{ inputs.tag }}')
          fi
          if [[ '${{ inputs.tag-sha }}' == 'true' ]]; then
            tags+=('${{ github.sha }}')
          fi
          if [[ '${{ inputs.build }}' == 'true' ]]; then
            tags+=('${{ github.sha }}')
          fi
          docker_config="$(jq -nc \
            '."editions" = [
              if ${{ inputs.push-de-to-ghcr }} then
                {
                  "name": "tenzir-de", "target": "tenzir-de", "registries": [
                   "ghcr.io"
                  ]
                }
              else
                empty
              end,
              if ${{ inputs.push-ce-to-ghcr }} then
                {
                  "name": "tenzir", "target": "tenzir", "registries": [
                   "ghcr.io"
                  ]
                }
              else
                empty
              end,
              if ${{ inputs.push-demo-to-ecr }} then
                {
                  "name": "tenzir-demo", "target": "tenzir-demo", "registries": [
                   "622024652768.dkr.ecr.eu-west-1.amazonaws.com"
                  ]
                }
              else
                empty
              end
            ] | ."version-build-metadata" = $vs | ."tags" = $ARGS.positional' \
            --arg vs "${{ steps.version.outputs.version-build-metadata }}" \
            --args -- "${tags[@]}")"
          echo "docker-config=${docker_config}" >> "$GITHUB_OUTPUT"
          echo "::notice docker-config = ${docker_config}"

  docker-tenzir:
    name: Docker
    needs:
      - configure
    uses: ./.github/workflows/docker.yaml
    with:
      config: ${{ needs.configure.outputs.docker-config }}
    secrets: inherit
